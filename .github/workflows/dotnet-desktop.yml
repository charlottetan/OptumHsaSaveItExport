name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: OptumHsaSaveItExport.sln                   # Replace with your solution name, i.e. MyWpfApp.sln.
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Setup NuGet.exe for use with actions
      # You may pin to the exact commit or the version.
      # uses: NuGet/setup-nuget@fd9fffd6ca4541cf4152a9565835ca1a88a6eb37
      uses: NuGet/setup-nuget@v1.1.1

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore NuGets
      run: nuget restore $env:Solution_Name

    # Build It
    - name: Build it
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        
    # Upload binaries
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3.1.1
      env:
        Configuration:  ${{ matrix.configuration }}
      with:
        name: OptumHsaSaveItExport-${{ env.Configuration }}
        # A file, directory or wildcard pattern that describes what to upload
        path: |
          bin/${{ env.Configuration}}/**/*
        
    
